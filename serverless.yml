service: openobserve-website

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-2 # Change to your preferred region
  stage: ${opt:stage, 'dev'}
  environment:
    ZOOM_CLIENT_ID: ${env:ZOOM_CLIENT_ID, ''}
    ZOOM_CLIENT_SECRET: ${env:ZOOM_CLIENT_SECRET, ''}
    ZOOM_ACCOUNT_ID: ${env:ZOOM_ACCOUNT_ID, ''}
    STRAPI_TOKEN: ${env:STRAPI_TOKEN, ''}
    PUBLIC_API_BASE_URL: ${env:PUBLIC_API_BASE_URL, ''}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:ListBucket
          Resource: "arn:aws:s3:::${self:custom.bucketName}/*"

functions:
  webinarRegister:
    handler: dist/lambda/webinar-register.handler
    timeout: 30
    memorySize: 256
    events:
      - httpApi:
          path: /api/webinar-register
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Authorization
            methods:
              - POST
              - OPTIONS

  webinarsSync:
    handler: dist/lambda/webinars-sync.handler
    timeout: 30
    memorySize: 256
    events:
      - httpApi:
          path: /api/webinars-sync
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Authorization
            methods:
              - GET
              - OPTIONS

resources:
  Resources:
    # S3 Bucket for static website
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: openobserve-website-${self:provider.stage}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: 404.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    # S3 Bucket Policy
    WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebsiteBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: s3:GetObject
              Resource: "${self:custom.bucketName}/*"

plugins:
  - serverless-s3-sync

custom:
  bucketName: openobserve-website-${self:provider.stage}
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: dist
      deleteRemoved: true
      exclude:
        - lambda/**
        - "*.map"

package:
  patterns:
    - "!node_modules/**"
    - "!src/**"
    - "!.git/**"
    - "!.env*"
    - "!*.md"
    - "!package*.json"
    - "dist/lambda/**"
    - "dist/server/**"
