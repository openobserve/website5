---
import Layout from "../../layouts/Layout.astro";
import BlogDetailsHeroSectionWrapper from "../../components/wrapper/BlogDetailsHeroSectionWrapper.vue";
import BlogDetailContentWrapper from "../../components/wrapper/BlogDetailContentWrapper.vue";
import SingleAuthorDetails from "../../components/blogs/SingleAuthorDetails.vue";
import BlogsDataWrapper from "../../components/wrapper/BlogsDataWrapper.vue";
import {
  getResBlogsBySlug,
  getAllResourceBlogs,
  getAuthorDetails,
} from "@/utils/api/resources";
import { getCaseStudies } from "@/utils/api/blogs";

export async function getStaticPaths() {
  const blogs = await getAllResourceBlogs();
  return blogs?.map((it) => ({
    params: { slug: it.slug },
  }));
}

const { slug }: any = Astro.params;
const SlugData = (await getResBlogsBySlug(slug)) || {};
const authorsSlugs = SlugData.authors || [];
const author = await Promise.all(
  authorsSlugs.map(async (authorSlug) => {
    return await getAuthorDetails(authorSlug.slug);
  })
);
const loadcaseStudyData = await getCaseStudies();
const metaObj = {
  title: SlugData?.title,
  description: SlugData?.description,
};
---

<Layout metaObj={metaObj}>
  <BlogDetailsHeroSectionWrapper
    type="articles"
    title={SlugData.title}
    bottomImage={SlugData.image?.url || SlugData.image?.url}
    client:load
    suggestions={SlugData.categories}
    type="articles"
    author={author}
    publishDate={new Intl.DateTimeFormat("en-US", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "2-digit",
    }).format(new Date(SlugData?.publishDate))}
  />
  <!-- activity={[
      author[0].name,
      new Intl.DateTimeFormat("en-US", {
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "2-digit",
      }).format(new Date(SlugData?.publishDate)),
    ]} -->
  <BlogDetailContentWrapper
    type="articles"
    client:load
    content={SlugData.content}
    authors={author}
  />
  <!-- <BlogsDataWrapper
    title="Want to know more? Check out these Blogs."
    description="Dive deeper into observability best practices and learn how OpenObserve can transform your monitoring strategy."
    items={loadcaseStudyData}
    client:load
    primaryButton={{
      text: "See All Blogs",
      link: "/blog",
    }}
  /> -->
</Layout>
