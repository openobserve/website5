---
import Layout from "../../layouts/Layout.astro";
import BlogDetailsHeroSectionWrapper from "../../components/wrapper/BlogDetailsHeroSectionWrapper.vue";
import BlogDetailContentWrapper from "../../components/wrapper/BlogDetailContentWrapper.vue";
import SingleAuthorDetails from "../../components/blogs/SingleAuthorDetails.vue";
import CaseStudyWrapper from "../../components/wrapper/CaseStudyWrapper.vue";
import { getAllBlogsCategoriesAndAuthors, getCaseStudies, getResBlogsBySlug, getAllResourceBlogs } from "@/utils/cache";

export async function getStaticPaths() {
  await getAllBlogsCategoriesAndAuthors(); // ✅ Use cache instead of direct API call
  const blogs = getAllResourceBlogs();
  return blogs?.map((it) => ({
    params: { slug: it.slug },
  }));
}

const { slug }: any = Astro.params;
const cachedData = await getAllBlogsCategoriesAndAuthors();
const SlugData = getResBlogsBySlug(slug) || {}; // ✅ Use cache lookup
const loadcaseStudyData = getCaseStudies();
---

<Layout>
  <BlogDetailsHeroSectionWrapper
    title={SlugData[0].title}
    bottomImage={SlugData[0].image?.formats?.large?.url || SlugData[0].image?.url}
    client:load
    suggestions={SlugData[0].categories}
    type="articles"
  />
  <BlogDetailContentWrapper client:load content={SlugData?.[0].content} />
  <SingleAuthorDetails authors={SlugData?.[0].authors} client:load type="articles" />
  <CaseStudyWrapper
    title="Want to know more? Check out these Blogs."
    description="Dive deeper into observability best practices and learn how OpenObserve can transform your monitoring strategy."
    items={loadcaseStudyData}
    client:load
    primaryButton={{
      text: "See All Blogs",
      link: "/blog",
    }}
  />
</Layout>
