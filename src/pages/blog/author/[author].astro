---
// Imports
import Layout from "../../../layouts/Layout.astro";
import ResourceHeroSection from "../../../components/heroSections/ResourceHeroSection.vue";
import BlogsWrapper from "../../../components/wrapper/BlogsWrapper.vue";
import TilesWithTitleWrapper from "../../../components/wrapper/TilesWithTitleWrapper.vue";
import BlogsListingWrapper from "../../../components/wrapper/BlogsListingWrapper.vue";
import fetchApi from "../../../utils/strapi";
import CaseStudyWrapper from "../../../components/wrapper/CaseStudyWrapper.vue";
import BlogPagination from "../../../components/blogs/BlogPagination.vue";
import { slugify } from "../../../utils/slugify";

// ðŸš€ Step 1: Generate dynamic paths for categories
export async function getStaticPaths() {
  const authors = await fetchApi({
    endpoint: "api/authors",
    query: { populate: "*", status: "draft" },
  });
  return authors?.data?.map((author: any) => ({
    params: { author: author.slug },
  }));
}

// ðŸš€ Step 2: Get `categorySlug` from URL
const { author } = Astro.params;
console.log("Static path", author);
// ðŸš€ Step 3: Fetch blogs based on category
const blogsData = await fetchApi({
  endpoint: "api/blog-pages",
  query: {
    "filters[authors][slug][$eq]": author,
    populate: "*",
  },
});

// âœ… Fetch other required data
const suggestionData = await fetchApi({
  endpoint: "api/categories",
  query: { path: "", status: "draft", pLevel: "10" },
});

const loadcaseStudyData = await fetchApi({
  endpoint: "api/blog-pages",
  query: {
    "filters[caseStudies][$eq]": true,
    status: "draft",
    pLevel: "10",
  },
});

// ðŸ”¹ Additional Card Data
const cardHeader = {
  title: "Additional Learning Resources",
  description:
    "Stay ahead of the curve and optimize your observability strategy with our learning resources.",
};

const cardData = [
  {
    icon: "/resources/64pxComponent.svg",
    title: "Case Studies",
  },
];
---

<!-- âœ… Render Category-Based Blogs -->
<Layout>
  <ResourceHeroSection
    title="Blogs"
    subtitle={`Showing posts for category: ${author}`}
  />

  <CaseStudyWrapper
    data={loadcaseStudyData.data}
    title="Blog Posts"
    subtitle="Latest articles and updates"
    client:load
  />

  <BlogsListingWrapper
    blogsData={blogsData}
    currentPage={1}
    suggestionData={suggestionData}
    client:load
  />

  <TilesWithTitleWrapper
    title={cardHeader.title}
    subtitle={cardHeader.description}
    items={cardData}
  />
</Layout>
