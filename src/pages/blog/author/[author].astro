---
// Imports
import Layout from "../../../layouts/Layout.astro";
import ResourceHeroSection from "../../../components/heroSections/ResourceHeroSection.vue";
import BlogsWrapper from "../../../components/wrapper/BlogsWrapper.vue";
import TilesWithTitleWrapper from "../../../components/wrapper/TilesWithTitleWrapper.vue";
import BlogsListingWrapper from "../../../components/wrapper/BlogsListingWrapper.vue";
import CaseStudyWrapper from "../../../components/wrapper/CaseStudyWrapper.vue";
import BlogPagination from "../../../components/blogs/BlogPagination.vue";
import { slugify } from "../../../utils/slugify";
import {
  getAllAuthors,
  getAllBlogs,
  getAllCategories,
  getAuthorDetails,
  getBlogsByAuthor,
  getCaseStudies,
} from "@/utils/api/blogs";
import { getTotalCounts } from "@/utils/cache";

// ðŸš€ Step 1: Generate dynamic paths for categories
export async function getStaticPaths() {
  const authors = await getAllAuthors();
  return authors?.map((author: any) => ({
    params: { author: author.slug },
  }));
}

// ðŸš€ Step 2: Get `categorySlug` from URL
const { author } = Astro.params;
// ðŸš€ Step 3: Fetch blogs based on category
const blogsData = await getBlogsByAuthor(author);
const auth = await getAuthorDetails(author);

// âœ… Fetch other required data
const suggestionData = await getAllCategories();
const loadcaseStudyData = await getCaseStudies();
const allBlogsData = await getAllBlogs();
const count = await getTotalCounts();

const metaObj = {
  title:
    "Author | Blog | Open Source Observability Platform for Logs, Metrics, Traces, and More â€“ Your Ultimate Dashboard for Alerts and Insights",
};
---

<!-- âœ… Render Category-Based Blogs -->
<Layout metaObj={metaObj}>
  <ResourceHeroSection
    title={"Author"}
    description={`Post by the author: ${auth.name}`}
  />

  <!-- <CaseStudyWrapper data={loadcaseStudyData} client:load /> -->

  <BlogsListingWrapper
    type="blog"
    blogsData={blogsData}
    allBlogData={allBlogsData}
    currentPage={1}
   suggestionData={suggestionData.slice(0, 15) || []}
   client:load
  />

  <!-- <TilesWithTitleWrapper
    title={cardHeader.title}
    subtitle={cardHeader.description}
    items={cardData}
  /> -->
  </section>
</Layout>
