---
import {
  getAllBlogs,
  getAllCategories,
  getAllAuthors,
  getAuthorDetails,
  getBlogsByPaginationAndAuthor,
  getAllSuperiorCategories,
  getAllsubTags,
  getallBlogsWithoutCaseStudies,
} from "@/utils/api/blog";
import Layout from "@/layouts/Layout.astro";
import BlogsListingWrapper from "@/components/blog/BlogListingWrapper.vue";
import CustomSection from "@/components/core/CustomSection.vue";
import BlogCategoryListing from "@/components/blog/BlogCategoryListing.vue";
import CommonHerosection from "@/components/herosection/CommonHeroSection.vue";
import BlogPageWrapper from "@/components/blog/BlogPageWrapper.vue";

export async function getStaticPaths() {
  const authors = await getAllAuthors();
  let paths = [];

  for (const author of authors) {
    const { totalPages } = await getBlogsByPaginationAndAuthor(1, author.slug);

    if (totalPages > 1) {
      for (let page = 2; page <= totalPages; page++) {
        paths.push({
          params: { author: author.slug, page: page.toString() },
        });
      }
    }
  }
  return paths;
}

// Get the current page from Astro props
const { page, author } = Astro.params;
const currentPage = parseInt(page);
const { blogs, totalBlogs } = await getBlogsByPaginationAndAuthor(
  currentPage,
  author
);
const suggestionData = await getAllCategories();
const allSuperiorCategories = await getAllSuperiorCategories();
const allsubTagsBasedonSuperiorTags = await getAllsubTags();
const allBlogsData = await getallBlogsWithoutCaseStudies();

const auth = await getAuthorDetails(author);

const metaObj = {
  title:
    "Author | Blog | Open Source Observability Platform for Logs, Metrics, Traces, and More â€“ Your Ultimate Dashboard for Alerts and Insights",
};
---

<Layout metaObj={metaObj}>
  <CommonHerosection
    title="Blog"
    description={`Post by the author: ${auth?.name}`}
    align="center"
  />
  <CustomSection sectionClass="">
    <!-- <BlogCategoryListing
      categories={allSuperiorCategories}
      allTags={allsubTagsBasedonSuperiorTags}
      type="blog"
      client:load
    />

    <BlogsListingWrapper
      type="blog"
      blogsData={blogs}
      client:load
      subType="author"
      identifier={author}
      currentPage={currentPage}
      totalItems={totalBlogs}
      searchBar
      allBlogs={allBlogsData}
    /> -->
    <BlogPageWrapper
      categories={allSuperiorCategories}
      allTags={allsubTagsBasedonSuperiorTags}
      type="blog"
      allBlogs={allBlogsData}
      blogsData={blogs}
      currentPage={currentPage}
      client:only="vue"
      subType="author"
      identifier={author}
    />
  </CustomSection>
</Layout>
