---
import {
  getAllBlogs,
  getAllCategories,
  ITEMS_PER_PAGE,
  getAllAuthors,
  getAuthorDetails,
  getBlogsByPaginationAndAuthor,
} from "@/utils/api/blogs";
import CustomSuggestionsWrapper from "@/components/wrapper/CustomSuggestionsWrapper.vue";
import Layout from "@/layouts/Layout.astro";
import ResourceHeroSection from "@/components/heroSections/ResourceHeroSection.vue";
import BlogsListingWrapper from "@/components/wrapper/BlogsListingWrapper.vue";

export async function getStaticPaths() {
  const authors = await getAllAuthors();
  let paths = [];

  for (const author of authors) {
    const { totalPages } = await getBlogsByPaginationAndAuthor(1, author.slug);

    if (totalPages > 1) {
      for (let page = 2; page <= totalPages; page++) {
        paths.push({
          params: { author: author.slug, page: page.toString() },
        });
      }
    }
  }
  return paths;
}

// Get the current page from Astro props
const { page, author } = Astro.params;
const currentPage = parseInt(page);
const { blogs, totalBlogs } = await getBlogsByPaginationAndAuthor(
  currentPage,
  author
);
const suggestionData = await getAllCategories();
const auth = await getAuthorDetails(author);

const metaObj = {
  title:
    "Author | Blog | Open Source Observability Platform for Logs, Metrics, Traces, and More – Your Ultimate Dashboard for Alerts and Insights",
};
---

<!-- ✅ Render Category-Based Blogs -->
<Layout metaObj={metaObj}>
  <ResourceHeroSection
    title="Blog"
    description={`Post by the author: ${auth.name}`}
  />

  <!-- <BlogsDataWrapper data={loadcaseStudyData || []} client:load /> -->

  <section class="container mx-auto px-4 md:px-6 lg:px-8 xl:px-11">
    <!-- CustomSuggestions Section -->
    <div class="py-3 md:py-6">
      <CustomSuggestionsWrapper
        suggestions={suggestionData.slice(
          0,
          Math.min(15, suggestionData.length)
        ) || []}
        type="blog"
        client:load
      />
    </div>

    <BlogsListingWrapper
      type="blog"
      blogsData={blogs}
      client:load
      subType="author"
      identifier={author}
      currentPage={currentPage}
      totalItems={totalBlogs}
    />
    <!-- {...paginationProps} -->

    <!-- <div>
      <BlogPagination
        totalItems={count.blogsCount} 
        itemsPerPage={itemsPerPage}
        currentPage={1}
        client:load
        type="blog"
      />
    </div> -->

    <!-- 
  <TilesWithTitleWrapper
    title={cardHeader.title}
    subtitle={cardHeader.description}
    items={cardData}
  /> -->
  </section>
</Layout>
