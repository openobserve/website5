---
import Layout from "../../layouts/Layout.astro";
import ResourceHeroSection from "../../components/heroSections/ResourceHeroSection.vue";
import CaseStudyGlassCardWrapper from "../../components/wrapper/CaseStudyGlassCardWrapper.vue";
import TilesWithTitleWrapper from "../../components/wrapper/TilesWithTitleWrapper.vue";
import BlogsListingWrapper from "../../components/wrapper/BlogsListingWrapper.vue";
import CaseStudyWrapper from "../../components/wrapper/CaseStudyWrapper.vue";
import BlogPagination from "../../components/blogs/BlogPagination.vue";
import {
  getAllBlogs,
  getAllCategories,
  getBlogsByPagination,
  getCaseStudies,
} from "@/utils/api/blogs";
import { getTotalCounts } from "@/utils/cache";
import CustomSuggestionsWrapper from "@/components/wrapper/CustomSuggestionsWrapper.vue";

// Get the current page from URL parameters
const { page } = Astro.params;
const currentPage = page ? parseInt(page) : 1;
const itemsPerPage = 50;

// Fetch blogs data with the current page
const blogsData = await getBlogsByPagination(currentPage, itemsPerPage);
const allBlogsData = await getAllBlogs();
const suggestionData = await getAllCategories();

const loadcaseStudyData = await getCaseStudies();

const count = await getTotalCounts();

const cardHeader = {
  title: "Additional Learning Resources",
  description:
    "Stay ahead of the curve and optimize your observability strategy with our learning resources.",
};

const cardData = [
  {
    icon: "/resources/64pxComponent.svg",
    title: "Case Studies",
  },
];

const metaObj = {
  title: "OpenObserve Blog | Observability News & Best Practices",
  description:
    "Stay updated with the latest in observability, monitoring best practices, and platform updates. Read technical guides and success stories from the OpenObserve team.",
};
---

<Layout metaObj={metaObj}>
  <ResourceHeroSection
    title="Blog"
    description="Explore latest insights and updates"
  />
  <CaseStudyWrapper data={loadcaseStudyData} client:load />

  <!-- categories section -->
  <section class="container mx-auto px-4 md:px-6 lg:px-8 xl:px-11">
    <!-- CustomSuggestions Section -->
    <div class="py-3 md:py-6">
      <CustomSuggestionsWrapper
        suggestions={suggestionData.slice(0, 15) || []}
        type="blog"
        client:load
      />
    </div>

    <!-- SearchBar Section -->
    <div class="search-container relative w-full px-4 pb-5">
      <div
        class="flex flex-row w-full space-x-2 justify-between items-center text-white border border-gray-50/10 h-10 rounded-lg px-2 focus-within:border-sky-500 bg-gray-700"
      >
        <span class="text-white px-4">
          <img src="/search.svg" alt="" class="w-6 h-6" />
        </span>
        <input
          id="blogSearchInput"
          type="text"
          class="w-full bg-transparent focus:outline-none text-white text-sm placeholder-neutral-400"
          placeholder="Search for a blog..."
          @input="searchBlogs"
        />
      </div>
      <!-- <div class="mt-2 ml-3 text-white text-sm">
        <template v-if="searchItem.trim()">
          <p v-show="filteredBlogsData.length > 0">
            Search results for "<span class="font-bold">{{ searchItem }}</span>"
          </p>
          <p v-show="filteredBlogsData.length === 0">
            No results for "<span class="font-bold">{{ searchItem }}</span>"
          </p>
        </template>
      </div>
    </div> -->
    </div>

    <!-- Blog Listing Component -->
    <div id="blogListingContainer">
      <BlogsListingWrapper blogsData={blogsData} client:load />
    </div>

    <div>
      <BlogPagination
        totalItems={count.blogsCount}
        itemsPerPage={itemsPerPage}
        currentPage={currentPage}
        client:load
        type="blog"
      />
    </div>
  </section>
</Layout>
