---
import Layout from "@/layouts/Layout.astro";
import { getTotalCounts } from "@/utils/cache";
import {
  getAllCategories,
  getBlogsByPagination,
  getallBlogsWithoutCaseStudies,
} from "@/utils/api/blog";
import { ITEMS_PER_PAGE } from "@/utils/api/constant";
import BlogCategoryListing from "@/components/blog/BlogCategoryListing.vue";
import BlogsListingWrapper from "@/components/blog/BlogListingWrapper.vue";
import CustomSection from "@/components/core/CustomSection.vue";
import CommonHerosection from "@/components/herosection/CommonHeroSection.vue";

// Generate static paths for pagination
export async function getStaticPaths() {
  const totalBlogs = (await getTotalCounts()).blogsCount;

  const totalPages = Math.ceil(totalBlogs / ITEMS_PER_PAGE);

  return Array.from({ length: totalPages }, (_, index) => ({
    params: { page: (index + 1).toString() },
  }));
}

// Get the current page from Astro props
const { page } = Astro.params;
const currentPage = parseInt(page);

// Handle invalid page numbers
if (isNaN(currentPage) || currentPage < 1) {
  throw Astro.redirect("/404");
}

// Fetch paginated blogs for the current page
const blogsData = await getBlogsByPagination(currentPage, ITEMS_PER_PAGE);
// Fetch categories for suggestions
let suggestionData = await getAllCategories();
const allBlogsData = await getallBlogsWithoutCaseStudies();
const count = await getTotalCounts();

const metaObj = { 
  title:
    "Blog | Open Source Observability Platform for Logs, Metrics, Traces, and More â€“ Your Ultimate Dashboard for Alerts and Insights",
  description: "Blog Posts",
};
---

<Layout metaObj={metaObj}>
  <CommonHerosection
    title="Blog"
    description="Explore latest insights and updates"
    align="center"
  />
  <CustomSection sectionClass="">
    <BlogCategoryListing
      categories={suggestionData.slice(0, Math.min(5, suggestionData.length))}
      allTags={suggestionData.slice(0, Math.min(12, suggestionData.length))}
      type="blog"
      client:only = "vue"
    />
    <BlogsListingWrapper
      searchBar
      allBlogs={allBlogsData}
      type="blog"
      totalItems={count.blogsCount}
      currentPage={currentPage}
      blogsData={blogsData}
      client:only = "vue"
    />
  </CustomSection>
</Layout>
