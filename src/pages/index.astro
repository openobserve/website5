---
import CustomButton from "../components/core/CustomButton.vue";
import CustomRoundShape from "../components/core/CustomRoundShape.vue";
import CustomSection from "../components/core/CustomSection.vue";
import CustomSeprater from "../components/core/CustomSeprater.vue";
import Layout from "../layouts/Layout.astro";
import Header from "../components/header/Header.vue";
import CustomCard from "../components/cards/CustomCard.vue";
import CustomInterChange from "../components/core/CustomInterChange.vue";
import CustomFeatureCard from "../components/cards/CustomFeatureCard.vue";
import CustomBanner from "../components/core/CustomBanner.vue";
import CustomSwipper from "../components/core/CustomSwipper.vue";
import CustomHoverHeader from "../components/header/CustomHoverHeader.vue";
import SectionHeader from "../components/header/SectionHeader.vue";
<<<<<<< HEAD
import CustomHeaderButton from "../components/header/CustomHeaderButton.vue";
=======
import CustomSectionBackground from "../components/core/CustomSectionBackground.vue";
>>>>>>> 1739daa4bf97bb9c5e9310e2ed3b69990bf2de5b
// Define the static data for features
const cardData = [
  {
    icon: "/public/Performance.svg",
    title: "Developers",
    description:
      "Debug applications faster with distributed tracing and detailed logs. Track requests across...",
  },
  {
    icon: "/public/Performance.svg",
    title: "Performance",
    description:
      "Monitor your application performance in real-time with actionable insights.",
  },
  {
    icon: "/public/Performance.svg",
    title: "Security",
    description:
      "Keep your applications secure with advanced security tools and best practices.",
  },
];
const featureData = [
  {
    Title: "Install and integrate",
    Image: "/public/Image view details.svg",
    Items: [
      {
        title: "Quick deployment",
        description:
          "Get started in minutes with Docker, Kubernetes, or a single binary installation.",
      },
      {
        title: "Flexible hosting options",
        description:
          "Choose between cloud hosting for convenience or self-hosting for complete control over your infrastructure.",
      },
      {
        title: "Seamless integrations",
        description:
          "Ingest data from popular tools like Fluentd, Fluentbit, Vector, Logstash, Prometheus, and OpenTelemetry to fit into your existing workflows effortlessly.",
      },
    ],
  },
  {
    Title: "Install and integrate",
    Image: "/public/Image view details.svg",
    Items: [
      {
        title: "Quick deployment",
        description:
          "Get started in minutes with Docker, Kubernetes, or a single binary installation.",
      },
      {
        title: "Flexible hosting options",
        description:
          "Choose between cloud hosting for convenience or self-hosting for complete control over your infrastructure.",
      },
      {
        title: "Seamless integrations",
        description:
          "Ingest data from popular tools like Fluentd, Fluentbit, Vector, Logstash, Prometheus, and OpenTelemetry to fit into your existing workflows effortlessly.",
      },
    ],
  },
];

const platformData = {
  platform: {
    title: "Observability Suite",
    items: [
      {
        title: "Metrics",
        items: [
          {
            title: "Time-series Data",
            link: "url_to_metric_data_1",
          },
          {
            title: "Prometheus Compatibility",
            link: "url_to_metric_data_2",
          },
          {
            title: "Custom Metrics",
            link: "url_to_metric_data_3",
          },
        ],
      },
      {
        title: "Traces",
        items: [
          {
            title: "Distributed Tracing",
            link: "url_to_tracing_1",
          },
          {
            title: "OpenTelemetry Support",
            link: "url_to_tracing_2",
          },
          {
            title: "Service Dependencies",
            link: "url_to_tracing_3",
          },
        ],
      },
      {
        title: "Frontend Monitoring",
        items: [
          {
            title: "Real User Monitoring (RUM)",
            link: "url_to_rum_1",
          },
          {
            title: "Session Replay",
            link: "url_to_rum_2",
          },
          {
            title: "Error Tracking",
            link: "url_to_rum_3",
          },
        ],
      },
      {
        title: "Logs",
        items: [
          {
            title: "Real-time Log Analytics",
            link: "url_to_logs_1",
          },
          {
            title: "Full-text Search",
            link: "url_to_logs_2",
          },
          {
            title: "Log Parsing & Filtering",
            link: "url_to_logs_3",
          },
          {
            title: "Log Compression",
            link: "url_to_logs_4",
          },
        ],
      },
      {
        title: "Alerting",
        items: [
          {
            title: "Scheduled Alerts",
            link: "url_to_alerting_1",
          },
          {
            title: "Real Time Alerts",
            link: "url_to_alerting_2",
          },
          {
            title: "Integrated Dashboards",
            link: "url_to_alerting_3",
          },
          {
            title: "Flexible Query Functions",
            link: "url_to_alerting_4",
          },
        ],
      },
      {
        title: "Pipelines",
        items: [
          {
            title: "VRL Functions",
            link: "url_to_pipelines_1",
          },
          {
            title: "Log parsing",
            link: "url_to_pipelines_2",
          },
          {
            title: "Logs to Metrics",
            link: "url_to_pipelines_3",
          },
          {
            title: "Metrics Summary",
            link: "url_to_pipelines_4",
          },
          {
            title: "Traces to Metrics",
            link: "url_to_pipelines_5",
          },
        ],
      },
      {
        title: "Visualisation & Dashboards",
        items: [
          {
            title: "Customizable Dashboard",
            link: "url_to_visualisation_1",
          },
          {
            title: "Real Time Data Exploration",
            link: "url_to_visualisation_2",
          },
          {
            title: "Data Source Integration",
            link: "url_to_visualisation_3",
          },
          {
            title: "Comprehensive Analytics",
            link: "url_to_visualisation_4",
          },
        ],
      },
    ],
    keyFeature: {
      title: "Key Features",
      items: [
        {
          title: "High Availability",
        },
        {
          title: "Role-Based Access Control (RBAC)",
        },
        {
          title: "Multi-Tenancy",
        },
        {
          title: "Federated Search",
        },
        {
          title: "Dynamic Schema Evolution",
        },
        {
          title: "Query Management",
        },
        {
          title: "Advanced Multilingual GUI",
        },
        {
          title: "Workload Management (QoS)",
        },
        {
          title: "Reports Generation",
        },
        {
          title: "Audit Trial",
        },
        {
          title: "Single Sign-On",
        },
      ],
    },
  },
};
---

<Layout>
  <!-- <CustomButton variant="primary" class='my-1'>
		Get Demo primary
	</CustomButton>
	<CustomButton variant="secondary" class='my-1'>
		Get Demo secondary
	</CustomButton>
	<CustomButton variant="tertiary" class='my-1'>
		Get Demo tertiary
	</CustomButton>
	<CustomSeprater/> -->

  <Header />

  <CustomSection>
    <CustomCard cards={cardData} />
  </CustomSection>
  <!-- Dynamically map through the featureData to pass to CustomInterChange -->
  <div class="container mx-auto px-4 md:px-10">
    {
      featureData.map((feature, index) => (
        <CustomInterChange
          key={index}
          items={feature.Items}
          title={feature.Title}
          image={feature.Image}
          direction={index % 2 === 0 ? "left" : "right"}
        />
      ))
    }
  </div>
  <CustomSection />

  <CustomSection>
    <CustomFeatureCard cards={cardData} />
  </CustomSection>

  <CustomBanner
    title="Fair and transparent pricing"
    subtitle="Only pay for what you use."
    buttons={[
      { text: "View Pricing Plans", variant: "primary" },
      { text: "Get Started for Free", variant: "secondary" },
    ]}
  />

  <CustomSection>
    <CustomSwipper />
    <CustomHoverHeader v-if="isPlatformHovered">
      <div>
        <h3 class="text-2xl font-bold pb-5 text-[#FFFFFF]">
          {platformData.platform.title}
        </h3>
        <div class="w-full flex flex-row gap-2">
          <div class="w-2/3 grid grid-cols-1 md:grid-cols-3 gap-6">
            {
              platformData.platform.items.map((section, index) => (
                <div key={index.toString()}>
                  <SectionHeader title={section.title} items={section.items} />
                </div>
              ))
            }
          </div>
          <div class="w-1/3 bg-gray-700 bg-opacity-50 p-4 rounded-lg">
            <SectionHeader
              title={platformData.platform.keyFeature.title}
              items={platformData.platform.keyFeature.items}
            />
          </div>
        </div>
        <div class="flex justify-between mt-6">
          <CustomHeaderButton
            title="Full Stack Observability Platform"
            linkTitle="View Platform"
          />
          <button class="btn">Pricing</button>
        </div>
      </div>
      <!-- <CustomSection>
    <button class="border-4 border-gradient-blue text-black rounded-lg">
      Hello
    </button>
  </CustomSection>
  <CustomSection>
    <CustomRoundShape
      imgSrc="/src/assets/background.svg"
      size="small"
      borderColor="skyblue"
    />
  </CustomSection>
  <button class="border-4 border-gradient-blue text-black rounded-lg">
    Hello
  </button>

  <CustomRoundShape
    imgSrc="/public/Performance.svg"
    iconSize="small"
    borderColor="bg-gradient-blue"
    size="small"
  />
  <CustomSeprater />
  <div class="mt-5 mx-5 bg-gray-200 py-2">
    <CustomButton
      variant="secondary"
      size="small"
      :icon="MyIconComponent"
      buttonText="Click Me"
      @click="handleClick"
    />
  </div>
  <div class="mt-5 mx-5 py-2">
    <CustomButton
      variant="primary"
      size="small"
      :icon="MyIconComponent"
      buttonText="Click Me"
      @click="handleClick"
    />
  </div>
  <div class="mt-5 mx-5 py-2 bg-gray-200">
    <CustomButton
      variant="tertiary"
      size="small"
      :icon="MyIconComponent"
      buttonText="Click Me"
      @click="handleClick"
    />
  </div>
  <div class="mt-5 mx-5 py-2 bg-black">
    <CustomButton
      variant="ghost"
      size="small"
      @click="handleClick"
      buttonText="Click Me"
    >
      <img src="/public/youtube.svg" class="w-5 h-5" />
    </CustomButton>
  </div> -->
  <!-- <CustomSection>
      <button class="border-4 border-gradient-blue text-black rounded-lg">
        Hello
      </button>
    </CustomSection> -->
  <!-- <CustomSection>
      <CustomRoundShape
        imgSrc="/src/assets/background.svg"
        size="small"
        borderColor="skyblue"
      />
    </CustomSection> -->
  <!-- <button class="border-4 border-gradient-blue text-black rounded-lg">
    Hello
  </button> -->
</Layout>
<!-- <CustomSeprater /> -->
<!-- <div class="mt-5 mx-5 bg-gray-200 py-2">
      <CustomButton
        variant="secondary"
        size="small"
        :icon="MyIconComponent"
        buttonText="Click Me"
        @click="handleClick"
      />
    </div>
    <div class="mt-5 mx-5 py-2">
      <CustomButton
        variant="primary"
        size="small"
        :icon="MyIconComponent"
        buttonText="Click Me"
        @click="handleClick"
      />
    </div>
    <div class="mt-5 mx-5 py-2 bg-gray-200">
      <CustomButton
        variant="tertiary"
        size="small"
        :icon="MyIconComponent"
        buttonText="Click Me"
        @click="handleClick"
      />
    </div>
    <div class="mt-5 mx-5 py-2 bg-black">
      <CustomButton
        variant="ghost"
        size="small"
        @click="handleClick"
        buttonText="Click Me"
      >
        <img src="/public/youtube.svg" class="w-5 h-5" />
      </CustomButton>
    </div> -->
