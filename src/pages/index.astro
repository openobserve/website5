---
import CustomButton from "../components/core/CustomButton.vue";
import CustomRoundShape from "../components/core/CustomRoundShape.vue";
import CustomSection from "../components/core/CustomSection.vue";
import CustomSeprater from "../components/core/CustomSeprater.vue";
import Layout from "../layouts/Layout.astro";
import Header from "../components/header/Header.vue";
import CustomCard from "../components/cards/CustomCard.vue";
import CustomInterChange from "../components/core/CustomInterChange.vue";
import CustomFeatureCard from "../components/cards/CustomFeatureCard.vue";
import CustomBanner from "../components/core/CustomBanner.vue";
import CustomHoverHeader from "../components/header/CustomHoverHeader.vue";
import SectionHeader from "../components/header/SectionHeader.vue";
import CustomHeaderButton from "../components/header/CustomHeaderButton.vue";
import CustomSectionBackground from "../components/core/CustomSectionBackground.vue";
import CompanySwiper from "../components/core/CompanySwiper.vue";
import HomeHeroSection from "../components/heroSections/HomeHeroSection.vue";
import PlatformHeroSection from "../components/heroSections/PlatofromHeroSection.vue";
import PlatformLogsHeroSection from "../components/heroSections/PlatformLogsHeroSection.vue";
// Define the static data for features
const cardData = [
  {
    icon: "/public/Performance.svg",
    title: "Developers",
    description:
      "Equip DevOps teams with comprehensive tools for deployment, monitoring, and incident response. Enhance system reliability and accelerate development cycles through automation and real-time insights.",
  },
  {
    icon: "/public/Performance.svg",
    title: "Performance",
    description:
      "Support platform engineers in building scalable, resilient systems. Provide data-driven insights that drive efficiency, enabling innovation in infrastructure management and seamless scaling capabilities.",
  },
  {
    icon: "/public/Performance.svg",
    title: "Security",
    description:
      "Provide development teams with observability tools to improve application performance and user experience. Foster collaboration through shared dashboards and rapid iteration capabilities, ensuring high-quality software delivery.",
  },
];
const featureData = [
  {
    Title: "Install and integrate",
    Image: "/public/Image view details.svg",
    Items: [
      {
        title: "Quick deployment",
        description:
          "Get started in minutes with Docker, Kubernetes, or a single binary installation.",
      },
      {
        title: "Flexible hosting options",
        description:
          "Choose between cloud hosting for convenience or self-hosting for complete control over your infrastructure.",
      },
      {
        title: "Seamless integrations",
        description:
          "Ingest data from popular tools like Fluentd, Fluentbit, Vector, Logstash, Prometheus, and OpenTelemetry to fit into your existing workflows effortlessly.",
      },
    ],
  },
  {
    Title: "Install and integrate",
    Image: "/public/Image view details.svg",
    Items: [
      {
        title: "Quick deployment",
        description:
          "Get started in minutes with Docker, Kubernetes, or a single binary installation.",
      },
      {
        title: "Flexible hosting options",
        description:
          "Choose between cloud hosting for convenience or self-hosting for complete control over your infrastructure.",
      },
      {
        title: "Seamless integrations",
        description:
          "Ingest data from popular tools like Fluentd, Fluentbit, Vector, Logstash, Prometheus, and OpenTelemetry to fit into your existing workflows effortlessly.",
      },
    ],
  },
];
---

<Layout>
  <!-- <CustomButton variant="primary" class='my-1'>
		Get Demo primary
	</CustomButton>
	<CustomButton variant="secondary" class='my-1'>
		Get Demo secondary
	</CustomButton>
	<CustomButton variant="tertiary" class='my-1'>
		Get Demo tertiary
	</CustomButton>
	<CustomSeprater/> -->

  <!-- <Header platformData={platformData}/> -->

  <!-- <HomeHeroSection
    title="Open Source Observability"
    subtitle="Fast, Scalable, and Cost-effective Monitoring for Modern Applications"
    buttons={[
      { label: "Get Started", variant: "white" },
      { label: "Watch Video", variant: "secondary" },
    ]}
    background="/public/Coding BG.svg"
  /> -->

  <PlatformHeroSection
    title="The Open Observe platform"
    subtitle="Discover how OpenObserve simplifies full-stack observability with unmatched efficiency and scalability."
    cards={cardData}
    buttons={[
      { label: "Get Started", variant: "white" },
      { label: "Watch Video", variant: "secondary" },
    ]}
    backgroundImage="/public/Eclipse.svg"
    footerImage="/public/Frame 2121314680.svg"
  />

  <!-- <PlatformLogsHeroSection
    title="The Open Observe platform"
    subtitle="Discover how OpenObserve simplifies full-stack observability with unmatched efficiency and scalability."
    buttons={[
      { label: "Get Started", variant: "white" },
      { label: "Watch Video", variant: "secondary" },
    ]}
    backgroundImage="/public/Eclipse.svg"
    rightImage="/public/Data sources Kubernetes.svg"
  /> -->

  <CustomSection>
    <CustomCard cards={cardData} />
  </CustomSection>
  <!-- Dynamically map through the featureData to pass to CustomInterChange -->
  <div class="container mx-auto px-4 md:px-10">
    {
      featureData.map((feature, index) => (
        <CustomInterChange
          key={index}
          items={feature.Items}
          title={feature.Title}
          image={feature.Image}
          direction={index % 2 === 0 ? "left" : "right"}
        />
      ))
    }
  </div>

  <CustomSection>
    <CustomFeatureCard cards={cardData} />
  </CustomSection>

  <CustomBanner
    title="Fair and transparent pricing"
    subtitle="Only pay for what you use."
    buttons={[
      { text: "View Pricing Plans", variant: "white" },
      { text: "Get Started for Free", variant: "secondary" },
    ]}
  />

  <CustomSection>
    <CompanySwiper
      data={[
        { path: "/public/Logo place holder (2).svg" },
        { path: "/public/Logo place holder (3).svg" },
        { path: "/public/Logo place holder (4).svg" },
        { path: "/public/Logo place holder (5).svg" },
      ]}
    />
    <!-- <CustomHoverHeader v-if="isPlatformHovered">
      <div>
        <h3 class="text-2xl font-bold pb-5 text-[#FFFFFF]">
          {platformData.platform.title}
        </h3>

        <div class="flex flex-col md:hidden justify-between gap-4 mb-4">
          <CustomHeaderButton
            title="Full Stack Observability Platform"
            linkTitle="View Platform"
          />
          <button class="btn">Pricing</button>
        </div>

        <div class="w-full flex flex-col md:flex-row gap-4">
          <div
            class="w-full grid grid-cols-1 md:grid-cols-2 lg:w-2/3 lg:grid-cols-3 gap-6"
          >
            {
              platformData.platform.items.map((section, index) => (
                <div key={index.toString()}>
                  <SectionHeader title={section.title} items={section.items} />
                </div>
              ))
            }
          </div>
          <div class="w-full md:w-1/3 bg-gray-700 bg-opacity-50 p-4 rounded-lg">
            <SectionHeader
              title={platformData.platform.keyFeature.title}
              items={platformData.platform.keyFeature.items}
            />
          </div>
        </div>
        <div
          class="hidden md:flex flex-col md:flex-row justify-between mt-6 gap-4"
        >
          <CustomHeaderButton
            title="Full Stack Observability Platform"
            linkTitle="View Platform"
          />
          <CustomButton variant="pricing">Pricing</CustomButton>
        </div>
      </div>
    </CustomHoverHeader> -->
  </CustomSection>
  <!-- <CustomSection>
    <button class="border-4 border-gradient-blue text-black rounded-lg">
      Hello
    </button>
  </CustomSection>
  <CustomSection>
    <CustomRoundShape
      imgSrc="/src/assets/background.svg"
      size="small"
      borderColor="skyblue"
    />
  </CustomSection>
  <button class="border-4 border-gradient-blue text-black rounded-lg">
    Hello
  </button>

  <CustomRoundShape
    imgSrc="/public/Performance.svg"
    iconSize="small"
    borderColor="bg-gradient-blue"
    size="small"
  />
  <CustomSeprater />
  <div class="mt-5 mx-5 bg-gray-200 py-2">
    <CustomButton
      variant="secondary"
      size="small"
      :icon="MyIconComponent"
      buttonText="Click Me"
      @click="handleClick"
    />
  </div>
  <div class="mt-5 mx-5 py-2">
    <CustomButton
      variant="primary"
      size="small"
      :icon="MyIconComponent"
      buttonText="Click Me"
      @click="handleClick"
    />
  </div>
  <div class="mt-5 mx-5 py-2 bg-gray-200">
    <CustomButton
      variant="tertiary"
      size="small"
      :icon="MyIconComponent"
      buttonText="Click Me"
      @click="handleClick"
    />
  </div>
  <div class="mt-5 mx-5 py-2 bg-black">
    <CustomButton
      variant="ghost"
      size="small"
      @click="handleClick"
      buttonText="Click Me"
    >
      <img src="/public/youtube.svg" class="w-5 h-5" />
    </CustomButton>
  </div> -->
  <!-- <CustomSection>
      <button class="border-4 border-gradient-blue text-black rounded-lg">
        Hello
      </button>
    </CustomSection> -->
  <!-- <CustomSection>
      <CustomRoundShape
        imgSrc="/src/assets/background.svg"
        size="small"
        borderColor="skyblue"
      />
    </CustomSection> -->
  <!-- <button class="border-4 border-gradient-blue text-black rounded-lg">
    Hello
  </button> -->
</Layout>
<!-- <CustomSeprater /> -->
<!-- <div class="mt-5 mx-5 bg-gray-200 py-2">
      <CustomButton
        variant="secondary"
        size="small"
        :icon="MyIconComponent"
        buttonText="Click Me"
        @click="handleClick"
      />
    </div>
    <div class="mt-5 mx-5 py-2">
      <CustomButton
        variant="primary"
        size="small"
        :icon="MyIconComponent"
        buttonText="Click Me"
        @click="handleClick"
      />
    </div>
    <div class="mt-5 mx-5 py-2 bg-gray-200">
      <CustomButton
        variant="tertiary"
        size="small"
        :icon="MyIconComponent"
        buttonText="Click Me"
        @click="handleClick"
      />
    </div>
    <div class="mt-5 mx-5 py-2 bg-black">
      <CustomButton
        variant="ghost"
        size="small"
        @click="handleClick"
        buttonText="Click Me"
      >
        <img src="/public/youtube.svg" class="w-5 h-5" />
      </CustomButton>
    </div> -->
