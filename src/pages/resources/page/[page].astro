---
import Layout from "../../../layouts/Layout.astro";
import ResourceHeroSection from "../../../components/heroSections/ResourceHeroSection.vue";
import BlogsListingWrapper from "../../../components/wrapper/BlogsListingWrapper.vue";
import TilesWithTitleWrapper from "../../../components/wrapper/TilesWithTitleWrapper.vue";
import CaseStudyWrapper from "../../../components/wrapper/CaseStudyWrapper.vue";
import { getTotalCounts } from "@/utils/cache";
import { getAllResourceCategories, getResourceBlogsByPagination } from "@/utils/api/resources";
import { getCaseStudies } from "@/utils/api/blogs";

const itemsPerPage = 50;

// Generate static paths for pagination
export async function getStaticPaths() {
  const totalBlogs = (await getTotalCounts()).resourceBlogsCount;

  const totalPages = Math.ceil(totalBlogs / 50);

  return Array.from({ length: totalPages }, (_, index) => ({
    params: { page: (index + 1).toString() },
  }));
}

// Get the current page from Astro props
const { page } = Astro.params;
const currentPage = parseInt(page);

// Handle invalid page numbers
if (isNaN(currentPage) || currentPage < 1) {
  throw Astro.redirect("/404");
}

// Fetch paginated blogs for the current page
const blogsData = await getResourceBlogsByPagination(currentPage, itemsPerPage);
// Fetch categories for suggestions
const suggestionData = await getAllResourceCategories();

// Fetch case studies
const caseStudyData = await getCaseStudies();
---
