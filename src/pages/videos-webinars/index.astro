---
import Layout from "@/layouts/Layout.astro";
import CommonHeroSection from "@/components/herosection/CommonHeroSection.vue";
import WebinarWrapper from "@/components/wrapper/WebinarWrapper.vue";
import PastWebinarWrapper from "@/components/wrapper/PastWebinarWrapper.vue";
import CTA from "@/components/core/CTA.vue";
import webinarsJson from "@/content/webinars.json";

// Map JSON data to the structure expected by the components
function mapWebinar(item, idx) {
  // Parse date/time for startTime
  let startTime;
  if (item.date && item.time) {
    // If date is ISO, use as is, else combine
    if (item.date.length > 10) {
      startTime = item.date;
    } else {
      startTime = `${item.date}T${item.time.replace("Z", "")}`;
    }
  } else {
    startTime = item.date || "";
  }

  return {
    id: idx + 1,
    title: item.title,
    subtitle: item.subtitle,
    description: item.description,
    date: item.date,
    duration: item.duration,
    authors: item.author,
    gradient: "from-blue-400 to-purple-500", // fallback, can be improved
    objectives: item.objectives || [],
    tags: item.tags || [],
    slug: item.slug,
    resources: item.resources || [],
    summary: item.summary || {},
  };
}

const allWebinars = webinarsJson.data.map(mapWebinar);

const heading = {
  title: "Ready to get started?",
  description:
    "Try OpenObserve today for more efficient and performant observability.",
};
const primaryButton = {
  text: "Get Started For Free",
  link: "https://cloud.openobserve.ai/web/login",
  target: "_blank",
  variant: "secondary",
};
const secondaryButton = {
  link: "/demo",
  variant: "tertiary",
  text: "Schedule Demo",
};
---

<Layout>
  <CommonHeroSection
    title="Videos and Webinars"
    description="Discover how OpenObserve can help you simplify observability. Watch on-demand videos and explore our featured live webinars to learn more."
    align="CENTER"
  />
  <WebinarWrapper allWebinars={allWebinars} client:load />
  <PastWebinarWrapper allWebinars={allWebinars} client:load />
  <CTA
    heading={heading}
    primaryButton={primaryButton}
    secondaryButton={secondaryButton}
    client:load
  />
</Layout>
